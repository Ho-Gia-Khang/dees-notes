FROM node:23-alpine AS shared-builder

# Build shared module first
WORKDIR /app/shared-module

# Copy all shared module files first (needed for prisma generate)
COPY shared-module/ ./
RUN npm ci
RUN npm run build:docker
RUN npx prisma migrate deploy

# Main service build stage
FROM node:23-alpine AS service-builder

WORKDIR /app

# Copy package files and install dependencies first (without shared module)
COPY media-service/default-gateway/package.json ./
RUN sed -i '/@dees-notes\/shared-module/d' package.json
RUN npm install

# Copy source files
COPY media-service/default-gateway/src ./src
COPY media-service/default-gateway/tsconfig.json ./

# Copy built shared module to node_modules after npm install
RUN mkdir -p node_modules/@dees-notes/shared-module
COPY --from=shared-builder /app/shared-module ./node_modules/@dees-notes/shared-module

# Build the service
RUN npm run build

# Production stage
FROM node:23-alpine

WORKDIR /app

# Copy built shared module to node_modules
COPY --from=shared-builder /app/shared-module /app/node_modules/@dees-notes/shared-module

# Copy service files
COPY --from=service-builder /app/node_modules ./node_modules
COPY --from=service-builder /app/dist ./dist
COPY --from=service-builder /app/package.json ./

# Create necessary directories and set proper ownership
RUN chown -R node:node /app

ENV PORT=3001

USER node

EXPOSE ${PORT}

CMD ["node", "dist/index.js"]