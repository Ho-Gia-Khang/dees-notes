FROM node:23-alpine AS builder

COPY /src ./src
COPY package*.json ./
COPY tsconfig.json ./
COPY prisma ./prisma

ENV PORT=3000 \ 
    MEDIA_SERVICE_URL=http://media:3001 \
    DOCUMENT_SERVICE_URL=http://document:3002 \ 
    JELLYFIN_URL=http://host.docker.internal:8096 \
    ORIGIN=http://deesnotes.cloud \
    DATABASE_URL=postgresql://postgres:prisma@host.docker.internal:5432/postgres?schema=public 

RUN npm ci
    
RUN npx prisma generate
RUN npx prisma db push

RUN npm run build

FROM node:23-alpine

# Stage 1: build the application
ENV PORT=3000 \ 
    MEDIA_SERVICE_URL=http://media:3001 \
    DOCUMENT_SERVICE_URL=http://document:3002 \ 
    JELLYFIN_URL=http://host.docker.internal:8096 \
    ORIGIN=http://deesnotes.cloud \
    DATABASE_URL=postgresql://postgres:prisma@host.docker.internal:5432/postgres?schema=public 

COPY --from=builder /dist ./dist
COPY --from=builder /prisma ./prisma
COPY --from=builder /node_modules ./node_modules
COPY package*.json ./


# Stage 2: run the application as user node
WORKDIR /dist

USER node

EXPOSE ${PORT}

CMD ["node", "index.js"]